parameters:
  nightly: false
  setup: []
  services: {}
  env: {}
  args: ''

jobs:
 - job: precheck
   displayName: Check for code coverage token
   pool:
     vmImage: ubuntu-16.04
   steps:
     # workaround for https://github.com/MicrosoftDocs/vsts-docs/issues/4841
     # note that we intentionally do not leak the secret itself
     - bash: |
         if [[ -n $CHECK ]] && [[ ! $CHECK == '$('* ]]; then
           echo '##vso[task.setvariable variable=has_secret;isOutput=true]true'
         else
           echo '##vso[task.setvariable variable=has_secret;isOutput=true]false'
         fi
       name: secret_check
       displayName: Is the token set?
       env:
         CHECK: ${{ parameters.token }}
 - job: tarpaulin
   dependsOn: precheck
   displayName: tarpaulin
   condition: and(succeeded(), eq(dependencies.precheck.outputs['secret_check.has_secret'], 'true'))
   pool:
     vmImage: ubuntu-16.04
   services:
     ${{ insert }}: ${{ parameters.services }}
   continueOnError: ${{ parameters.nightly }}
   container:
     ${{ if eq('true', parameters.nightly) }}:
       image: xd009642/tarpaulin:latest-nightly
     ${{ if ne('true', parameters.nightly) }}:
       image: xd009642/tarpaulin:latest
     options: --security-opt seccomp=unconfined
   steps:
     # Run any user-specific setup steps
     - ${{ parameters.setup }}
     - script: cargo tarpaulin ${{ parameters.args }} --out Xml
       displayName: Run tarpaulin
       env:
         ${{ insert }}: ${{ parameters.env }}
     - script: bash <(curl -s https://codecov.io/bash)
       displayName: Upload results to codecov
       env:
         CODECOV_TOKEN: ${{ parameters.token }}
