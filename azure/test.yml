parameters:
  rust: stable
  allow_fail: false
  envs: {}
  setup: []
  test_ignored: false
  single_threaded: false

jobs:
- job: ${{ parameters.name }}
  ${{ if eq(parameters.test_ignored, 'true') }}:
    displayName: cargo +${{ parameters.rust }} test -- --ignored
  ${{ if ne(parameters.test_ignored, 'true') }}:
    displayName: cargo +${{ parameters.rust }} test
  continueOnError: ${{ parameters.allow_fail }}
  ${{ if parameters.cross }}:
    strategy:
      matrix:
        Linux:
          vmImage: ubuntu-16.04
        MacOS:
          vmImage: macOS-10.14
        Windows:
          vmImage: windows-2019
  ${{ if not(parameters.cross) }}:
    variables:
      vmImage: ubuntu-16.04
  pool:
    vmImage: $(vmImage)
  steps:
  - template: install-rust.yml
    parameters:
      rust: ${{ parameters.rust }}
      setup: ${{ parameters.setup }}
  - ${{ if and(eq(parameters.single_threaded, 'true'), eq(parameters.test_ignored, 'true')) }}:
    - script: cargo test --all -- --ignored --test-threads=1
      displayName: Run tests (single-threaded w/ignored)
      env:
        ${{ insert }}: ${{ parameters.envs }}
  - ${{ if and(eq(parameters.single_threaded, 'true'), ne(parameters.test_ignored, 'true')) }}:
    - script: cargo test --all -- --test-threads=1
      displayName: Run tests (single-threaded)
      env:
        ${{ insert }}: ${{ parameters.envs }}
  - ${{ if and(ne(parameters.single_threaded, 'true'), eq(parameters.test_ignored, 'true')) }}:
    - script: cargo test --all -- --ignored
      displayName: Run tests (incl. ignored)
      env:
        ${{ insert }}: ${{ parameters.envs }}
  - ${{ if and(ne(parameters.single_threaded, 'true'), ne(parameters.test_ignored, 'true')) }}:
    - script: cargo test --all
      displayName: Run tests
      env:
        ${{ insert }}: ${{ parameters.envs }}
