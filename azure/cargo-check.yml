parameters:
  rust: stable
  benches: false
  setup: []
  err_on_warn: false
  allow_fail: false

jobs:
- job: ${{ parameters.name }}
  ${{ if eq(parameters.rust, 'stable') }}:
    ${{ if eq(parameters.err_on_warn, 'true') }}:
      displayName: "cargo check -Dwarnings"
    ${{ if ne(parameters.err_on_warn, 'true') }}:
      displayName: cargo check
  ${{ if ne(parameters.rust, 'stable') }}:
    ${{ if eq(parameters.err_on_warn, 'true') }}:
      displayName: "cargo +${{ parameters.rust }} check -Dwarnings"
    ${{ if ne(parameters.err_on_warn, 'true') }}:
      displayName: cargo +${{ parameters.rust }} check
  continueOnError: ${{ parameters.allow_fail }}
  pool:
    vmImage: ubuntu-16.04
  steps:
  - template: install-rust.yml
    parameters:
      rust: ${{ parameters.rust }}
      setup: ${{ parameters.setup }}
  - ${{ if eq(parameters.err_on_warn, 'true') }}:
    - bash: echo "##vso[task.setvariable variable=RUSTFLAGS;]-Dwarnings"
      displayName: "Enable warnings from rustc"
  - script: cargo check --all --bins --examples --tests
    displayName: Check compilation w/ default features
  - script: cargo check --all --bins --examples --tests --no-default-features
    displayName: Check compilation w/ no features
  - script: cargo check --all --bins --examples --tests --all-features
    displayName: Check compilation w/ all features
  - bash: "[[ -e Cargo.lock ]] && echo '##vso[task.setvariable variable=is_locked]true' || echo '##vso[task.setvariable variable=is_locked]false'"
    displayName: Are dependencies locked?
  # we only check with --all here since we don't care about the actual
  # compilation, just the dependencies + dev-dependencies resolution.
  # we _do_ include all features as it may matter though
  - script: cargo check --all --locked --all-features
    condition: and(succeeded(), eq(variables.is_locked, 'true'))
    displayName: Check that Cargo.lock is satisfiable

  - ${{ if ne(parameters.benches, 'false') }}:
    - script: cargo check --benches --all
      displayName: Check benchmarks
