parameters:
  minrust: 1.32.0 # Rust 2018 with uniform paths
  prefix: ''

stages:
 # the format here is so that we can have _two_ instances of this whole
 # template in the upstream repository's testing setup, and give the stages
 # unique names.
 - stage: ${{ format('{0}check', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Compilation check ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Compilation check
   dependsOn: []
   jobs:
     - job: foo
       pool:
         vmImage: ubuntu-16.04
       steps:
         - script: echo '${{ format('{0}', parameters.codecov_token) }}'
         - script: echo '${{ ne(format('{0}', parameters.codecov_token), '') }}'
     - template: cargo-check.yml
       parameters:
         name: cargo_check
 - stage: ${{ format('{0}test', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Test suite ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Test suite
   dependsOn: ${{ format('{0}check', parameters.prefix) }}
   jobs:
     - template: tests.yml
       parameters:
         minrust: ${{ parameters.minrust }}
 - stage: ${{ format('{0}style', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Style linting ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Style linting
   dependsOn: ${{ format('{0}check', parameters.prefix) }}
   jobs:
     - template: style.yml
 # this looks funky because we need to deal with:
 #
 #  - parameters.codecov_tokens not being set (it'll be null) _or_ being ''.
 #  - parameters.codecov_tokens being set to $(SECRET) and us being on a PR
 #    where SECRET isn't set. in this case, expansion won't happen (I think?)
 #    it'll just be left as a literal $(...), which we also check against
 #
 # we also need this format business to make sure we print compare the
 # _contents_ of the parameter and coerce to a string
 - ${{ if and(ne(format('{0}', parameters.codecov_token), ''), not(startsWith(format('{0}', parameters.codecov_token), '$('))) }}:
   - stage: ${{ format('{0}coverage', parameters.prefix) }}
     ${{ if ne(parameters.prefix, '') }}:
       displayName: ${{ format('Code coverage ({0})', parameters.prefix) }}
     ${{ if eq(parameters.prefix, '') }}:
       displayName: Code coverage
     dependsOn: ${{ format('{0}test', parameters.prefix) }}
     jobs:
       - template: coverage.yml
         parameters:
           codecov_token: ${{ parameters.codecov_token }}

# vim: ts=2:sw=2
