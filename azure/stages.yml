parameters:
  minrust: 1.32.0 # Rust 2018 with uniform paths
  prefix: ''

stages:
 # the format here is so that we can have _two_ instances of this whole
 # template in the upstream repository's testing setup, and give the stages
 # unique names.
 - stage: ${{ format('{0}check', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Compilation check ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Compilation check
   dependsOn: []
   jobs:
     - template: cargo-check.yml
       parameters:
         name: cargo_check
 - stage: ${{ format('{0}test', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Test suite ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Test suite
   dependsOn: ${{ format('{0}check', parameters.prefix) }}
   jobs:
     - template: tests.yml
       parameters:
         minrust: ${{ parameters.minrust }}
 - stage: ${{ format('{0}style', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Style linting ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Style linting
   dependsOn: ${{ format('{0}check', parameters.prefix) }}
   jobs:
     - template: style.yml
 - ${{ if ne(parameters.codecov_token, '') }}:
   stage: ${{ format('{0}coverage', parameters.prefix) }}
   ${{ if ne(parameters.prefix, '') }}:
     displayName: ${{ format('Code coverage ({0})', parameters.prefix) }}
   ${{ if eq(parameters.prefix, '') }}:
     displayName: Code coverage
   dependsOn: ${{ format('{0}test', parameters.prefix) }}
   jobs:
     - template: coverage.yml
       parameters:
         codecov_token: ${{ parameters.codecov_token }}

# vim: ts=2:sw=2
